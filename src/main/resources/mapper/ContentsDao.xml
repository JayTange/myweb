<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.seckill.dao.ContentsDao">

    <resultMap id="BaseResultMap" type="org.seckill.entity.Contents">
        <id column="cid" jdbcType="INTEGER" property="cid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="slug" jdbcType="VARCHAR" property="slug"/>
        <result column="created" jdbcType="INTEGER" property="created"/>
        <result column="modified" jdbcType="INTEGER" property="modified"/>
        <result column="author_id" jdbcType="INTEGER" property="authorId"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="tags" jdbcType="VARCHAR" property="tags"/>
        <result column="categories" jdbcType="VARCHAR" property="categories"/>
        <result column="hits" jdbcType="INTEGER" property="hits"/>
        <result column="comments_num" jdbcType="INTEGER" property="commentsNum"/>
        <result column="allow_comment" jdbcType="BIT" property="allowComment"/>
        <result column="allow_ping" jdbcType="BIT" property="allowPing"/>
        <result column="allow_feed" jdbcType="BIT" property="allowFeed"/>
    </resultMap>


    <sql id="Base_Column_List">
        cid, title, slug, created, modified, author_id, type, status, tags, categories, hits,
        comments_num, allow_comment, allow_ping, allow_feed
    </sql>

    <select id="queryAll" resultType="Contents">
        SELECT *
        FROM t_contents
        ORDER BY cid
        LIMIT #{limit}
        OFFSET #{offset};
    </select>

    <select id="getCount" resultType="Integer">
        select count(cid) from t_contents
    </select>
    <delete id="deleteContent">
        DELETE FROM t_contents WHERE cid = #{cid};
    </delete>

    <select id="getSlugCount" resultType="Integer">
        SELECT count(slug) FROM t_contents WHERE slug = #{slug};
    </select>

    <insert id="insertContent" parameterType="org.seckill.entity.Contents" useGeneratedKeys="true" keyProperty="cid">
      insert into t_contents (cid, title, slug,
      created, modified, author_id,
      type, status, tags,
      categories, hits, comments_num,
      allow_comment, allow_ping, allow_feed,
      content)
    values (#{cid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{slug,jdbcType=VARCHAR},
      #{created,jdbcType=INTEGER}, #{modified,jdbcType=INTEGER}, #{authorId,jdbcType=INTEGER},
      #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR},
      #{categories,jdbcType=VARCHAR}, #{hits,jdbcType=INTEGER}, #{commentsNum,jdbcType=INTEGER},
      #{allowComment,jdbcType=BIT}, #{allowPing,jdbcType=BIT}, #{allowFeed,jdbcType=BIT},
      #{content,jdbcType=LONGVARCHAR})
    </insert>

    <update id="updateByPrimaryKey" parameterType="org.seckill.entity.Contents">
    UPDATE t_contents
    set title = #{title,jdbcType=VARCHAR},
      slug = #{slug,jdbcType=VARCHAR},
      created = #{created,jdbcType=INTEGER},
      modified = #{modified,jdbcType=INTEGER},
      author_id = #{authorId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      categories = #{categories,jdbcType=VARCHAR},
      hits = #{hits,jdbcType=INTEGER},
      comments_num = #{commentsNum,jdbcType=INTEGER},
      allow_comment = #{allowComment,jdbcType=BIT},
      allow_ping = #{allowPing,jdbcType=BIT},
      allow_feed = #{allowFeed,jdbcType=BIT}
    where cid = #{cid,jdbcType=INTEGER}
    </update>

    <select id="selectByPrimaryKey" parameterType="Integer" resultType="Contents">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        content
        FROM t_contents
        WHERE cid = #{cid,jdbcType=INTEGER}
    </select>

    <select id="selectBySlug" parameterType="String" resultType="Contents">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        content
        FROM t_contents
        WHERE slug = #{slug,jdbcType=VARCHAR}
    </select>

    <update id="updateByPrimaryKeyWithCondition" parameterType="Contents">
        update t_contents
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                slug = #{slug,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=INTEGER},
            </if>
            <if test="modified != null">
                modified = #{modified,jdbcType=INTEGER},
            </if>
            <if test="authorId != null">
                author_id = #{authorId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                tags = #{tags,jdbcType=VARCHAR},
            </if>
            <if test="categories != null">
                categories = #{categories,jdbcType=VARCHAR},
            </if>
            <if test="hits != null">
                hits = #{hits,jdbcType=INTEGER},
            </if>
            <if test="commentsNum != null">
                comments_num = #{commentsNum,jdbcType=INTEGER},
            </if>
            <if test="allowComment != null">
                allow_comment = #{allowComment,jdbcType=BIT},
            </if>
            <if test="allowPing != null">
                allow_ping = #{allowPing,jdbcType=BIT},
            </if>
            <if test="allowFeed != null">
                allow_feed = #{allowFeed,jdbcType=BIT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where cid = #{cid,jdbcType=INTEGER}
    </update>

    <resultMap id="archiveMap" type="org.seckill.entity.Archive">
        <id column="date" property="date"/>
        <result column="count" property="count"/>
    </resultMap>

    <select id="findReturnArchive" resultMap="archiveMap">
        select FROM_UNIXTIME(created, '%Y年%m月') as date, count(*) as count from t_contents where type = 'post' and status = 'publish' group by date order by date desc
    </select>

    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.seckill.entity.Contents">
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
    </resultMap>

    <select id="getContentArchive" resultType="org.seckill.entity.Contents">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_contents
        WHERE created > #{start}
        AND
        created  <![CDATA[ < ]]>#{end}
        ORDER BY created DESC
    </select>
</mapper>